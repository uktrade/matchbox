name: CI
on:
  pull_request:
    branches:
      - main
      - "feature/**"
  workflow_dispatch:

jobs:
  format-and-lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v5

      - name: Install uv and Python
        uses: astral-sh/setup-uv@v6

      - name: Install just
        uses: extractions/setup-just@v2

      - name: Format and lint
        run: just format

  test:
    name: test ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix:
        python-version:
          - "3.11"
          - "3.12"
          - "3.13"

    steps:
      - uses: actions/checkout@v5

      - name: Install uv and Python
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
          python-version: ${{ matrix.python-version }}

      - name: Install the project
        run: uv sync --frozen --all-extras --dev

      - name: Copy environment variables
        run: cp environments/development.env .env

      - name: Run databases and API
        run: docker compose up -d --wait

      - name: Run Python tests
        run: uv run pytest

      - name: Dump docker logs
        if: failure()
        uses: jwalton/gh-docker-logs@v2

  scan-for-secrets:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Run TruffleHog scan
        run: |
          docker run --rm -v ${{ github.workspace }}:/repo \
            trufflesecurity/trufflehog:latest \
            git file:///repo \
            --since-commit main \
            --branch ${{ github.head_ref }} \
            --github-actions \
            --fail

  build-docs:
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v5

      - name: Install uv and Python
        uses: astral-sh/setup-uv@v6
        with:
          python-version: "3.11"

      - name: Install the project
        run: uv sync --frozen --all-extras --dev

      - name: Build with MkDocs
        run: uv run mkdocs build

  build-package:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Install uv and Python
        uses: astral-sh/setup-uv@v6
        with:
          python-version: "3.11"

      - name: Build package
        run: uv build

  ci-success:
    needs: [format-and-lint, test, scan-for-secrets, build-docs, build-package]
    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    steps:
      - name: CI success
        run: echo "All CI checks passed!"
