services:
  warehouse:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_USER: warehouse_user
      POSTGRES_PASSWORD: warehouse_password
      POSTGRES_DB: warehouse
    ports:
      - "${MB__DEV__WAREHOUSE_PORT:-7654}:5432"
    volumes:
      - warehouse_data:/var/lib/postgresql/data
  matchbox-postgres:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_USER: matchbox_user
      POSTGRES_PASSWORD: matchbox_password
      POSTGRES_DB: matchbox
    ports:
      - "${MB__DEV__POSTGRES_BACKEND_PORT:-5432}:5432"
    volumes:
      - matchbox_data:/var/lib/postgresql/data
  matchbox-storage:
    image: minio/minio:latest
    restart: always
    volumes:
      - matchbox_store:/data
    command: server --console-address ":9001" /data
    ports:
      - "${MB__DEV__DATASTORE_PORT:-9000}:9000"
      - "${MB__DEV__DATASTORE_CONSOLE_PORT-9001}:9001"
    environment:
      MINIO_ROOT_USER: ${MB__SERVER__DATASTORE__ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${MB__SERVER__DATASTORE__SECRET_ACCESS_KEY}
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5
<<<<<<< HEAD
  datadog-agent:
    image: datadog/agent:7
    profiles:
      - monitoring
    env_file:
      - .datadog.env
    environment:
      # Sets tags attached to logs/metrics/errors
      DD_SERVICE: matchbox
      DD_ENV: local
      # What integrations are enabled
      DD_APM_ENABLED: true
      DD_LOGS_ENABLED: true
      DD_PROFILING_ENABLED: true
      DD_PROCESS_AGENT_PROCESS_COLLECTION_ENABLED: true
      # Allows connections not from localhost to the agent (crucial when running as a sidecar container)
      DD_APM_NON_LOCAL_TRAFFIC: true
      # Where logs and traces are sent to
      DD_SITE: datadoghq.eu
      # The hostname of the agent itself (which is the service name when running via docker compose)
      DD_HOSTNAME: datadog-agent
    ports:
      - "8126:8126"
=======
>>>>>>> 45960f9 (Remove datadog from docker compose)
  api:
    build:
      context: .
      args:
        ENV_FILE: server.env
      dockerfile: src/matchbox/server/Dockerfile
      target: dev
    environment:
      DD_AGENT_HOST: datadog-agent
      DD_LOGS_INJECTION: true
    ports:
      - "${MB__DEV__API_PORT-8000}:8000"
    depends_on:
      matchbox-postgres:
        condition: service_started
        required: true
      matchbox-storage:
        condition: service_started
        required: true
      datadog-agent:
        condition: service_healthy
        required: false
    develop:
      # https://docs.docker.com/compose/file-watch/#compose-watch-versus-bind-mounts
      watch:
        # Sync the working directory with the `/app` directory in the container
        - action: sync
          path: ./src/matchbox
          target: /code/src/matchbox

        # Rebuild the image on changes to the `pyproject.toml`
        - action: rebuild
          path: ./pyproject.toml

volumes:
  warehouse_data:
  matchbox_data:
  matchbox_store: