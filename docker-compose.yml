services:
  server-warehouse:
    image: postgres:17
    restart: always
    ports:
      - "${MB__DEV__WAREHOUSE_PORT:-7654}:5432"
    volumes:
      - warehouse_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=warehouse_user
      - POSTGRES_PASSWORD=warehouse_password
      - POSTGRES_DB=warehouse
  server-filestorage:
    image: minio/minio:latest
    restart: always
    volumes:
      - matchbox_store:/data
    command: server --console-address ":9001" /data
    ports:
      - "${MB__DEV__DATASTORE_PORT:-9000}:9000"
      - "${MB__DEV__DATASTORE_CONSOLE_PORT-9001}:9001"
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      MINIO_ROOT_USER: ${MB__SERVER__DATASTORE__ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${MB__SERVER__DATASTORE__SECRET_ACCESS_KEY}
  server-api:
    build:
      context: .
      args:
        ENV_FILE: server.env
      dockerfile: src/matchbox/server/Dockerfile
      target: dev
    ports:
      - "${MB__DEV__API_PORT-8000}:8000"
    depends_on:
      server-database:
        condition: service_started
        required: true
      server-warehouse:
        condition: service_started
        required: true
      server-filestorage:
        condition: service_started
        required: true
      datadog-agent:
        condition: service_healthy
        required: false
    develop:
      # https://docs.docker.com/compose/file-watch/#compose-watch-versus-bind-mounts
      watch:
        # Sync the working directory with the `/app` directory in the container
        - action: sync
          path: ./src/matchbox
          target: /code/src/matchbox

        # Rebuild the image on changes to the `pyproject.toml`
        - action: rebuild
          path: ./pyproject.toml
    environment:
      - DD_AGENT_HOST=datadog-agent
      - DD_ENV=local-${LOCAL_USERNAME}
      - DD_SERVICE=matchbox-server-api
    labels:
          my.custom.label.team: 'matchbox'
          my.custom.label.application: 'matchbox'
          com.datadoghq.ad.logs: '[{"source": "python"}]'
  server-database:
    image: postgres:17
    restart: always
    ports:
      - "${MB__SERVER__POSTGRES__PORT:-5432}:5432"
    volumes:
      - matchbox_data:/var/lib/postgresql/data
    environment:
      - DD_AGENT_HOST=datadog-agent
      - DD_ENV=local-${LOCAL_USERNAME}
      - DD_SERVICE=matchbox-server-database
      - POSTGRES_DB=matchbox
      - POSTGRES_PASSWORD=matchbox_password
      - POSTGRES_USER=matchbox_user
    labels:
          my.custom.label.team: 'matchbox'
          my.custom.label.application: 'matchbox'
          com.datadoghq.ad.logs: '[{"source": "postgres"}]'
  datadog-agent:
    image: public.ecr.aws/datadog/agent:7
    env_file:
      - .datadog.env
    pid: "host"  # "task" for ECS
    ports:
      - "8125:8125/tcp"
      - "8126:8126/udp"
    # NOTE: see documentation https://docs.datadoghq.com/universal_service_monitoring/setup/?tab=dockercompose
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock:ro
     - /proc/:/host/proc/:ro
     - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
     - /sys/kernel/debug:/sys/kernel/debug
     - /lib/modules:/lib/modules
     - /usr/src:/usr/src
     - /var/tmp/datadog-agent/system-probe/build:/var/tmp/datadog-agent/system-probe/build
     - /var/tmp/datadog-agent/system-probe/kernel-headers:/var/tmp/datadog-agent/system-probe/kernel-headers
     - /etc/apt:/host/etc/apt
     - /etc/yum.repos.d:/host/etc/yum.repos.d
     - /etc/zypp:/host/etc/zypp
     - /etc/pki:/host/etc/pki
     - /etc/yum/vars:/host/etc/yum/vars
     - /etc/dnf/vars:/host/etc/dnf/vars
     - /etc/rhsm:/host/etc/rhsm
    cap_add:
     - SYS_ADMIN
     - SYS_RESOURCE
     - SYS_PTRACE
     - NET_ADMIN
     - NET_BROADCAST
     - NET_RAW
     - IPC_LOCK
     - CHOWN
    security_opt:
     - apparmor:unconfined
    environment:
      - DD_APM_ENABLED=true
      - DD_APM_NON_LOCAL_TRAFFIC=true
      - DD_CONTAINER_EXCLUDE='name:server-warehouse name:server-filestorage'
      - DD_CONTAINER_LABELS_AS_TAGS={"my.custom.label.team":"team", "my.custom.label.application":"application"}
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
      - DD_ENV=local-${LOCAL_USERNAME}
      - DD_HOSTNAME
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      - DD_LOGS_ENABLED=true
      - DD_LOG_LEVEL=INFO
      - DD_PROCESS_AGENT_ENABLED=true
      - DD_SITE=datadoghq.eu
      - DD_SYSTEM_PROBE_NETWORK_ENABLED=true
      - DD_SYSTEM_PROBE_SERVICE_MONITORING_ENABLED=true
      - HOST_ROOT='/host/root'
    labels:
          my.custom.label.team: 'matchbox'
          my.custom.label.application: 'matchbox'
          com.datadoghq.ad.logs: '[{"source": "agent"}]'
volumes:
  warehouse_data:
  matchbox_data:
  matchbox_store:
