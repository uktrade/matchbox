services:
  warehouse:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_USER: warehouse_user
      POSTGRES_PASSWORD: warehouse_password
      POSTGRES_DB: warehouse
    ports:
      - "7654:5432"
    volumes:
      - warehouse_data:/var/lib/postgresql/data
  matchbox-postgres:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_USER: matchbox_user
      POSTGRES_PASSWORD: matchbox_password
      POSTGRES_DB: matchbox
    ports:
      - "5432:5432"
    volumes:
      - matchbox_data:/var/lib/postgresql/data
  matchbox-storage:
    image: minio/minio:latest
    restart: always
    volumes:
      - matchbox_store:/data
    command: server --console-address ":9001" /data
    ports:
      - "${MB__DATASTORE_PORT:-9000}:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MB__DATASTORE__ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${MB__DATASTORE__SECRET_ACCESS_KEY}
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5
  datadog-agent:
    image: datadog/agent:7
    profiles:
      - monitoring
    env_file:
      - environments/datadog-agent-public.env
      - environments/.datadog-agent-private.env
  api:
    build:
      context: .
      args:
        ENV_FILE: dev_docker_server.env
      dockerfile: src/matchbox/server/Dockerfile
      target: dev
    environment:
      DD_AGENT_HOST: datadog-agent
    ports:
      - "8000:8000"
    depends_on:
      matchbox-postgres:
        condition: service_started
        required: true
      matchbox-storage:
        condition: service_started
        required: true
      datadog-agent:
        condition: service_healthy
        required: false
    develop:
      # https://docs.docker.com/compose/file-watch/#compose-watch-versus-bind-mounts
      watch:
        # Sync the working directory with the `/app` directory in the container
        - action: sync
          path: ./src/matchbox
          target: /code/src/matchbox

        # Rebuild the image on changes to the `pyproject.toml`
        - action: rebuild
          path: ./pyproject.toml

volumes:
  warehouse_data:
  matchbox_data:
  matchbox_store: